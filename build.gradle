buildscript {
    repositories {
        maven { url 'http://dl.bintray.com/hmrc/releases'}
    }
}

plugins {
    id "com.jfrog.bintray" version "1.7.3"
}

apply plugin: 'groovy'
apply plugin: 'maven'
apply plugin: 'maven-publish'

project.ext {
    jobDslVersion = '1.68'
    jenkinsVersion = '2.89'
    testDependenciesOutputDirectory = new File(sourceSets.test.output.resourcesDir, 'test-dependencies')
}

configurations {
    testPlugins {}

    // see JENKINS-45512
    testCompile {
        exclude group: 'xalan'
        exclude group: 'xerces'
    }
}

sourceSets {
    test {
        resources {
            srcDirs = ['src/test/resources', sourceSets.test.output.resourcesDir]
        }
    }
}

repositories {
    maven { url 'https://repo.jenkins-ci.org/public/' }
    maven { url 'https://repo.jenkins-ci.org/releases/' }
    jcenter()
}

dependencies {
    compile 'org.codehaus.groovy:groovy-all:2.4.12'
    compile ('com.google.guava:guava:11.0.1') {
        exclude module: 'jsr305'
    }
    compile ('org.jenkins-ci.plugins:job-dsl-core:1.68') {
        exclude module: 'ivy'
    }

    testCompile 'org.spockframework:spock-core:1.1-groovy-2.4'

    // Jenkins test harness dependencies
    testCompile 'org.jenkins-ci.main:jenkins-test-harness:2.33'
    testCompile "org.jenkins-ci.main:jenkins-war:${jenkinsVersion}"

    // Job DSL plugin including plugin dependencies
    testCompile "org.jenkins-ci.plugins:job-dsl:${jobDslVersion}"
    testCompile "org.jenkins-ci.plugins:job-dsl:${jobDslVersion}@jar"
    testCompile 'org.jenkins-ci.plugins:structs:1.6@jar'

    // plugins to install in test instance
    testPlugins 'org.jenkins-ci.plugins:matrix-auth:2.2'
    testPlugins 'org.jenkins-ci.plugins:cloudbees-folder:6.4'
}

version = '11.0.0'
group = 'uk.gov.hmrc'

task resolveTestPlugins(type: Copy) {
    from configurations.testPlugins
    into testDependenciesOutputDirectory
    include '*.hpi'
    include '*.jpi'
    mustRunAfter compileJava

    doFirst {
        println "destinationDir: ${destinationDir}"
    }

    doLast {
        def baseNames = source.collect {
            it.name[0..it.name.lastIndexOf('.') - 1]
        }.sort()
        println "Copied plugins for tests."

        new File(destinationDir, 'index').setText(baseNames.join('\n'), 'UTF-8')
        println "Created plugin index file."
    }
}

test {
    dependsOn tasks.resolveTestPlugins
    inputs.files sourceSets.test.groovy.srcDirs, sourceSets.test.output.resourcesDir

    // set build directory for Jenkins test harness, JENKINS-26331
    systemProperty 'buildDirectory', project.buildDir.absolutePath
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }
}

bintray {
    user = credentialsProperty('user')
    key = credentialsProperty('password')
    publications = ['mavenJava']
    pkg {
        repo = 'releases'
        name = this.project.name
        userOrg = 'hmrc'
        version {
            name = this.version
            vcsTag = 'None'
        }
    }
    publish = true
}

private def credentialsProperty(String key) {
    def credentials = new Properties()
    def file = new File("${System.properties['user.home']}", '/.bintray/.credentials')
    if (file.exists()) {
        credentials.load(file.newDataInputStream())
    }
    credentials.get(key)
}

tasks.install.dependsOn(build)
